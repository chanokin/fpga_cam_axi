/*
 * ov5642_registers.h
 *
 *  Created on: 11 Nov 2015
 *      Author: pinedagg
 */

#ifndef OV5642_REGISTERS_H_
#define OV5642_REGISTERS_H_


struct reg_val{
	u16 reg;
	u8 val;
};


//From App notes


const struct reg_val OV5642_set_BnW[] = {
 {0x5001, 0xff},
 {0x5580, 0x18},
 {0x5585, 0x80},
 {0x5586, 0x80},
};

// FROM Application notes
// Basic SETUP
const struct reg_val OV5642_YUV_QVGA[] =
{
		// for the setting,  24M Mlck input and 24M Plck output
		//15fps YUV mode
		{0x3103, 0x93},
		{0x3008, 0x82},
		{0x3017, 0x7f},
		{0x3018, 0xfc},
		{0x3810, 0xc2},
		{0x3615, 0xf0},
		{0x3000, 0x00},
		{0x3001, 0x00},
		{0x3002, 0x5c},
		{0x3003, 0x00},
		{0x3004, 0xff},
		{0x3005, 0xff},
		{0x3006, 0x43},
		{0x3007, 0x37},
		{0x3011, 0x08},
		{0x3010, 0x10},
		{0x460c, 0x22},
		{0x3815, 0x04},
		{0x370c, 0xa0},
		{0x3602, 0xfc},
		{0x3612, 0xff},
		{0x3634, 0xc0},
		{0x3613, 0x00},
		{0x3605, 0x7c},
		{0x3621, 0x09},
		{0x3622, 0x60},
		{0x3604, 0x40},
		{0x3603, 0xa7},
		{0x3603, 0x27},
		{0x4000, 0x21},
		{0x401d, 0x22},
		{0x3600, 0x54},
		{0x3605, 0x04},
		{0x3606, 0x3f},
		{0x3c01, 0x80},
		{0x5000, 0x4f},
		{0x5020, 0x04},
		{0x5181, 0x79},
		{0x5182, 0x00},
		{0x5185, 0x22},
		{0x5197, 0x01},
		{0x5001, 0xff},
		{0x5500, 0x0a},
		{0x5504, 0x00},
		{0x5505, 0x7f},
		{0x5080, 0x08},
		{0x300e, 0x18},
		{0x4610, 0x00},
		{0x471d, 0x05},
		{0x4708, 0x06},
		//set resolution
		{0x3808, 0x02},
		{0x3809, 0x80}, //640
		{0x380a, 0x01},
		{0x380b, 0xe0}, //480
		//
		{0x380e, 0x07},
		{0x380f, 0xd0},
		{0x501f, 0x00}, //set YUV ISP
		{0x5000, 0x4f},
		{0x4300, 0x30}, //422 YUV -> YUYV
		{0x3503, 0x07},
		{0x3501, 0x73},
		{0x3502, 0x80},
		{0x350b, 0x00},
		{0x3503, 0x07},
		{0x3824, 0x11},
		{0x3501, 0x1e},
		{0x3502, 0x80},
		{0x350b, 0x7f},
		{0x380c, 0x0c},
		{0x380d, 0x80},
		{0x380e, 0x03},
		{0x380f, 0xe8},
		{0x3a0d, 0x04},
		{0x3a0e, 0x03},
		{0x3818, 0xc1},
		{0x3705, 0xdb},
		{0x370a, 0x81},
		{0x3801, 0x80},
		{0x3621, 0x87},
		{0x3801, 0x50},
		{0x3803, 0x08},
		{0x3827, 0x08},
		{0x3810, 0x40},
		{0x3804, 0x05}, //total capture width
		{0x3805, 0x00},
		{0x5682, 0x05}, //avg window width end
		{0x5683, 0x00},
		{0x3806, 0x03}, //total capture height
		{0x3807, 0xc0},
		{0x5686, 0x03}, //avg window height end
		{0x5687, 0xbc},
		{0x3a00, 0x78},
		{0x3a1a, 0x05},
		{0x3a13, 0x30},
		{0x3a18, 0x00},
		{0x3a19, 0x7c},
		{0x3a08, 0x12},
		{0x3a09, 0xc0},
		{0x3a0a, 0x0f},
		{0x3a0b, 0xa0},
		{0x350c, 0x07},
		{0x350d, 0xd0},
		{0x3500, 0x00},
		{0x3501, 0x00},
		{0x3502, 0x00},
		{0x350a, 0x00},
		{0x350b, 0x00},
		{0x3503, 0x00},
		{0x528a, 0x02},
		{0x528b, 0x04},
		{0x528c, 0x08},
		{0x528d, 0x08},
		{0x528e, 0x08},
		{0x528f, 0x10},
		{0x5290, 0x10},
		{0x5292, 0x00},
		{0x5293, 0x02},
		{0x5294, 0x00},
		{0x5295, 0x02},
		{0x5296, 0x00},
		{0x5297, 0x02},
		{0x5298, 0x00},
		{0x5299, 0x02},
		{0x529a, 0x00},
		{0x529b, 0x02},
		{0x529c, 0x00},
		{0x529d, 0x02},
		{0x529e, 0x00},
		{0x529f, 0x02},
		{0x3030, 0x2b},
		{0x3a02, 0x00},
		{0x3a03, 0x7d},
		{0x3a04, 0x00},
		{0x3a14, 0x00},
		{0x3a15, 0x7d},
		{0x3a16, 0x00},
		{0x3a00, 0x78},
		{0x3a08, 0x09},
		{0x3a09, 0x60},
		{0x3a0a, 0x07},
		{0x3a0b, 0xd0},
		{0x3a0d, 0x08},
		{0x3a0e, 0x06},
		{0x5193, 0x70},
		{0x589b, 0x04},
		{0x589a, 0xc5},
		{0x401e, 0x20},
		{0x4001, 0x42},
		{0x401c, 0x04},
		{0x528a, 0x01},
		{0x528b, 0x04},
		{0x528c, 0x08},
		{0x528d, 0x10},
		{0x528e, 0x20},
		{0x528f, 0x28},
		{0x5290, 0x30},
		{0x5292, 0x00},
		{0x5293, 0x01},
		{0x5294, 0x00},
		{0x5295, 0x04},
		{0x5296, 0x00},
		{0x5297, 0x08},
		{0x5298, 0x00},
		{0x5299, 0x10},
		{0x529a, 0x00},
		{0x529b, 0x20},
		{0x529c, 0x00},
		{0x529d, 0x28},
		{0x529e, 0x00},
		{0x529f, 0x30},
		{0x5282, 0x00},
		{0x5300, 0x00},
		{0x5301, 0x20},
		{0x5302, 0x00},
		{0x5303, 0x7c},
		{0x530c, 0x00},
		{0x530d, 0x0c},
		{0x530e, 0x20},
		{0x530f, 0x80},
		{0x5310, 0x20},
		{0x5311, 0x80},
		{0x5308, 0x20},
		{0x5309, 0x40},
		{0x5304, 0x00},
		{0x5305, 0x30},
		{0x5306, 0x00},
		{0x5307, 0x80},
		{0x5314, 0x08},
		{0x5315, 0x20},
		{0x5319, 0x30},
		{0x5316, 0x10},
		{0x5317, 0x00},
		{0x5318, 0x02},
		{0x5402, 0x3f},
		{0x5403, 0x00},
		{0x3406, 0x00},
		{0x5180, 0xff},
		{0x5181, 0x52},
		{0x5182, 0x11},
		{0x5183, 0x14},
		{0x5184, 0x25},
		{0x5185, 0x24},
		{0x5186, 0x06},
		{0x5187, 0x08},
		{0x5188, 0x08},
		{0x5189, 0x7c},
		{0x518a, 0x60},
		{0x518b, 0xb2},
		{0x518c, 0xb2},
		{0x518d, 0x44},
		{0x518e, 0x3d},
		{0x518f, 0x58},
		{0x5190, 0x46},
		{0x5191, 0xf8},
		{0x5192, 0x04},
		{0x5193, 0x70},
		{0x5194, 0xf0},
		{0x5195, 0xf0},
		{0x5196, 0x03},
		{0x5197, 0x01},
		{0x5198, 0x04},
		{0x5199, 0x12},
		{0x519a, 0x04},
		{0x519b, 0x00},
		{0x519c, 0x06},
		{0x519d, 0x82},
		{0x519e, 0x00},
		{0x5025, 0x80},
		{0x5583, 0x40},
		{0x5584, 0x40},
		{0x5580, 0x02},
		{0x5000, 0xcf},
		{0x3710, 0x10},
		{0x3632, 0x51},
		{0x3702, 0x10},
		{0x3703, 0xb2},
		{0x3704, 0x18},
		{0x370b, 0x40},
		{0x370d, 0x03},
		{0x3631, 0x01},
		{0x3632, 0x52},
		{0x3606, 0x24},
		{0x3620, 0x96},
		{0x5785, 0x07},
		{0x3a13, 0x30},
		{0x3600, 0x52},
		{0x3604, 0x48},
		{0x3606, 0x1b},
		{0x370d, 0x0b},
		{0x370f, 0xc0},
		{0x3709, 0x01},
		{0x3823, 0x00},
		{0x5007, 0x00},
		{0x5009, 0x00},
		{0x5011, 0x00},
		{0x5013, 0x00},
		{0x519e, 0x00},
		{0x5086, 0x00},
		{0x5087, 0x00},
		{0x5088, 0x00},
		{0x5089, 0x00},
		{0x302b, 0x00},
		//set resolution
		{0x3808, 0x01},
		{0x3809, 0x40}, // 320
		{0x380a, 0x00},
		{0x380b, 0xf0}, // 240
		//
		{0x3a00, 0x78},
		{0x5001, 0xFF},
		{0x5583, 0x50},
		{0x5584, 0x50},
		{0x5580, 0x02},
		{0x3c01, 0x80},
		{0x3c00, 0x04},
		//LENS
		{0x5800, 0x48},
		{0x5801, 0x31},
		{0x5802, 0x21},
		{0x5803, 0x1b},
		{0x5804, 0x1a},
		{0x5805, 0x1e},
		{0x5806, 0x29},
		{0x5807, 0x38},
		{0x5808, 0x26},
		{0x5809, 0x17},
		{0x580a, 0x11},
		{0x580b, 0xe },
		{0x580c, 0xd },
		{0x580d, 0xe },
		{0x580e, 0x13},
		{0x580f, 0x1a},
		{0x5810, 0x15},
		{0x5811, 0xd },
		{0x5812, 0x8 },
		{0x5813, 0x5 },
		{0x5814, 0x4 },
		{0x5815, 0x5 },
		{0x5816, 0x9 },
		{0x5817, 0xd },
		{0x5818, 0x11},
		{0x5819, 0xa },
		{0x581a, 0x4 },
		{0x581b, 0x0 },
		{0x581c, 0x0 },
		{0x581d, 0x1 },
		{0x581e, 0x6 },
		{0x581f, 0x9 },
		{0x5820, 0x12},
		{0x5821, 0xb },
		{0x5822, 0x4 },
		{0x5823, 0x0 },
		{0x5824, 0x0 },
		{0x5825, 0x1 },
		{0x5826, 0x6 },
		{0x5827, 0xa },
		{0x5828, 0x17},
		{0x5829, 0xf },
		{0x582a, 0x9 },
		{0x582b, 0x6 },
		{0x582c, 0x5 },
		{0x582d, 0x6 },
		{0x582e, 0xa },
		{0x582f, 0xe },
		{0x5830, 0x28},
		{0x5831, 0x1a},
		{0x5832, 0x11},
		{0x5833, 0xe },
		{0x5834, 0xe },
		{0x5835, 0xf },
		{0x5836, 0x15},
		{0x5837, 0x1d},
		{0x5838, 0x6e},
		{0x5839, 0x39},
		{0x583a, 0x27},
		{0x583b, 0x1f},
		{0x583c, 0x1e},
		{0x583d, 0x23},
		{0x583e, 0x2f},
		{0x583f, 0x41},
		{0x5840, 0xe },
		{0x5841, 0xc },
		{0x5842, 0xd },
		{0x5843, 0xc },
		{0x5844, 0xc },
		{0x5845, 0xc },
		{0x5846, 0xc },
		{0x5847, 0xc },
		{0x5848, 0xd },
		{0x5849, 0xe },
		{0x584a, 0xe },
		{0x584b, 0xa },
		{0x584c, 0xe },
		{0x584d, 0xe },
		{0x584e, 0x10},
		{0x584f, 0x10},
		{0x5850, 0x11},
		{0x5851, 0xa },
		{0x5852, 0xf },
		{0x5853, 0xe },
		{0x5854, 0x10},
		{0x5855, 0x10},
		{0x5856, 0x10},
		{0x5857, 0xa },
		{0x5858, 0xe },
		{0x5859, 0xe },
		{0x585a, 0xf },
		{0x585b, 0xf },
		{0x585c, 0xf },
		{0x585d, 0xa },
		{0x585e, 0x9 },
		{0x585f, 0xd },
		{0x5860, 0xc },
		{0x5861, 0xb },
		{0x5862, 0xd },
		{0x5863, 0x7 },
		{0x5864, 0x17},
		{0x5865, 0x14},
		{0x5866, 0x18},
		{0x5867, 0x18},
		{0x5868, 0x16},
		{0x5869, 0x12},
		{0x586a, 0x1b},
		{0x586b, 0x1a},
		{0x586c, 0x16},
		{0x586d, 0x16},
		{0x586e, 0x18},
		{0x586f, 0x1f},
		{0x5870, 0x1c},
		{0x5871, 0x16},
		{0x5872, 0x10},
		{0x5873, 0xf },
		{0x5874, 0x13},
		{0x5875, 0x1c},
		{0x5876, 0x1e},
		{0x5877, 0x17},
		{0x5878, 0x11},
		{0x5879, 0x11},
		{0x587a, 0x14},
		{0x587b, 0x1e},
		{0x587c, 0x1c},
		{0x587d, 0x1c},
		{0x587e, 0x1a},
		{0x587f, 0x1a},
		{0x5880, 0x1b},
		{0x5881, 0x1f},
		{0x5882, 0x14},
		{0x5883, 0x1a},
		{0x5884, 0x1d},
		{0x5885, 0x1e},
		{0x5886, 0x1a},
		{0x5887, 0x1a},
		//AWB
		{0x5180, 0xff},
		{0x5181, 0x52},
		{0x5182, 0x11},
		{0x5183, 0x14},
		{0x5184, 0x25},
		{0x5185, 0x24},
		{0x5186, 0x14},
		{0x5187, 0x14},
		{0x5188, 0x14},
		{0x5189, 0x69},
		{0x518a, 0x60},
		{0x518b, 0xa2},
		{0x518c, 0x9c},
		{0x518d, 0x36},
		{0x518e, 0x34},
		{0x518f, 0x54},
		{0x5190, 0x4c},
		{0x5191, 0xf8},
		{0x5192, 0x04},
		{0x5193, 0x70},
		{0x5194, 0xf0},
		{0x5195, 0xf0},
		{0x5196, 0x03},
		{0x5197, 0x01},
		{0x5198, 0x05},
		{0x5199, 0x2f},
		{0x519a, 0x04},
		{0x519b, 0x00},
		{0x519c, 0x06},
		{0x519d, 0xa0},
		{0x519e, 0xa0},
		//D/S
		{0x528a, 0x00},
		{0x528b, 0x01},
		{0x528c, 0x04},
		{0x528d, 0x08},
		{0x528e, 0x10},
		{0x528f, 0x20},
		{0x5290, 0x30},
		{0x5292, 0x00},
		{0x5293, 0x00},
		{0x5294, 0x00},
		{0x5295, 0x01},
		{0x5296, 0x00},
		{0x5297, 0x04},
		{0x5298, 0x00},
		{0x5299, 0x08},
		{0x529a, 0x00},
		{0x529b, 0x10},
		{0x529c, 0x00},
		{0x529d, 0x20},
		{0x529e, 0x00},
		{0x529f, 0x30},
		{0x5282, 0x00},
		{0x5300, 0x00},
		{0x5301, 0x20},
		{0x5302, 0x00},
		{0x5303, 0x7c},
		{0x530c, 0x00},
		{0x530d, 0x10},
		{0x530e, 0x20},
		{0x530f, 0x80},
		{0x5310, 0x20},
		{0x5311, 0x80},
		{0x5308, 0x20},
		{0x5309, 0x40},
		{0x5304, 0x00},
		{0x5305, 0x30},
		{0x5306, 0x00},
		{0x5307, 0x80},
		{0x5314, 0x08},
		{0x5315, 0x20},
		{0x5319, 0x30},
		{0x5316, 0x10},
		{0x5317, 0x00},
		{0x5318, 0x02},
		//CMX
		{0x5380, 0x01},
		{0x5381, 0x00},
		{0x5382, 0x00},
		{0x5383, 0x1f},
		{0x5384, 0x00},
		{0x5385, 0x06},
		{0x5386, 0x00},
		{0x5387, 0x00},
		{0x5388, 0x00},
		{0x5389, 0xE1},
		{0x538A, 0x00},
		{0x538B, 0x2B},
		{0x538C, 0x00},
		{0x538D, 0x00},
		{0x538E, 0x00},
		{0x538F, 0x10},
		{0x5390, 0x00},
		{0x5391, 0xB3},
		{0x5392, 0x00},
		{0x5393, 0xA6},
		{0x5394, 0x08},
		//GAMMA
		{0x5480, 0x0c},
		{0x5481, 0x18},
		{0x5482, 0x2f},
		{0x5483, 0x55},
		{0x5484, 0x64},
		{0x5485, 0x71},
		{0x5486, 0x7d},
		{0x5487, 0x87},
		{0x5488, 0x91},
		{0x5489, 0x9a},
		{0x548A, 0xaa},
		{0x548B, 0xb8},
		{0x548C, 0xcd},
		{0x548D, 0xdd},
		{0x548E, 0xea},
		{0x548F, 0x1d},
		{0x5490, 0x05},
		{0x5491, 0x00},
		{0x5492, 0x04},
		{0x5493, 0x20},
		{0x5494, 0x03},
		{0x5495, 0x60},
		{0x5496, 0x02},
		{0x5497, 0xB8},
		{0x5498, 0x02},
		{0x5499, 0x86},
		{0x549A, 0x02},
		{0x549B, 0x5B},
		{0x549C, 0x02},
		{0x549D, 0x3B},
		{0x549E, 0x02},
		{0x549F, 0x1C},
		{0x54A0, 0x02},
		{0x54A1, 0x04},
		{0x54A2, 0x01},
		{0x54A3, 0xED},
		{0x54A4, 0x01},
		{0x54A5, 0xC5},
		{0x54A6, 0x01},
		{0x54A7, 0xA5},
		{0x54A8, 0x01},
		{0x54A9, 0x6C},
		{0x54AA, 0x01},
		{0x54AB, 0x41},
		{0x54AC, 0x01},
		{0x54AD, 0x20},
		{0x54AE, 0x00},
		{0x54AF, 0x16},
		{0x54B0, 0x01},
		{0x54B1, 0x20},
		{0x54B2, 0x00},
		{0x54B3, 0x10},
		{0x54B4, 0x00},
		{0x54B5, 0xf0},
		{0x54B6, 0x00},
		{0x54B7, 0xDF},
		{0x5402, 0x3f},
		{0x5403, 0x00},
		//UV ADJUST
		{0x5500, 0x10},
		{0x5502, 0x00},
		{0x5503, 0x06},
		{0x5504, 0x00},
		{0x5505, 0x7f},
		//AE
		{0x5025, 0x80},
		{0x3a0f, 0x30},
		{0x3a10, 0x28},
		{0x3a1b, 0x30},
		{0x3a1e, 0x28},
		{0x3a11, 0x61},
		{0x3a1f, 0x10},
		{0x5688, 0xfd},
		{0x5689, 0xdf},
		{0x568a, 0xfe},
		{0x568b, 0xef},
		{0x568c, 0xfe},
		{0x568d, 0xef},
		{0x568e, 0xaa},
		{0x568f, 0xaa}
};


//from https://github.com/manakeri/android_kernel_samsung_xcover/blob/2e48c9301c2387ee34c5619bfdba3e954fe823db/common/drivers/media/video/pxa95x-ov5642.c

const struct reg_val OV5642_set_RGB[] = {
//	{0x4740,0x21}, // DVP output polarity, latch at falling edge, vsync active high
	{0x501e,0x2a}, // RGB Dither ctrl, RGB555/565
	{0x5002,0xf8}, // Thumbnail scaling, dithering, YUV2RGB enabled
	{0x501f,0x01}, // Mux ctrl, Image Sensor Processor in RGB mode
	{0x4300,0x61}, // Format ctrl, RGB565 {r[4:0],g[5:3]},{g[2:0],b[4:0]}


};

const struct reg_val OV5642_set_RGB565_output[] = {
	{0x460c ,0x20},
	{0x460b ,0x37},
	{0x471c ,0xd0},
	{0x3815 ,0x01},
	{0x3818 ,0xc1},
	{0x501f ,0x01},
	{0x4300 ,0x61},
	{0x3002 ,0x1c},
	{0x3819 ,0x80},
	{0x5002 ,0xf8},
};

const struct reg_val OV5642_set_VGA[] = {
		{0x5001, 0xff},
		{0x3808, 0x02},
		{0x3809, 0x80},
		{0x380a, 0x01},
		{0x380b, 0xe0},
};

const struct reg_val OV5642_set_QVGA[] = {
		{0x5001, 0xff},
		{0x3808, 0x01},
		{0x3809, 0x40},
		{0x380a, 0x00},
		{0x380b, 0xf0},
};


const struct reg_val OV5642_set_CIF[] = {
        {0x5001, 0xff},
        {0x3808, 0x01},
        {0x3809, 0x60},
        {0x380a, 0x01},
        {0x380b, 0x20},
};

const struct reg_val OV5642_set_QCIF[] = {
        {0x5001, 0xff},
        {0x3808, 0x00},
        {0x3809, 0xB0},
        {0x380a, 0x00},
        {0x380b, 0x90},
};



const struct reg_val OV5642_CIF_PREVIEW[] = {
		{0x3800, 0x1 },
		{0x3801, 0x50},
		{0x3802, 0x0 },
		{0x3803, 0x8 },
		{0x3804, 0x4 },
		{0x3805, 0x96},
		{0x3806, 0x3 },
		{0x3807, 0xc0},
//output res
		{0x3808, 0x1 },
		{0x3809, 0x60},
		{0x380a, 0x1 },
		{0x380b, 0x20},
//total sizes???
		{0x380c, 0xc },
		{0x380d, 0x80},
		{0x380e, 0x3 },
		{0x380f, 0xe8},
//enable scaling, awb
		{0x5001, 0x7f},
//set avg windows
		{0x5680, 0x0 },
		{0x5681, 0x0 },
		{0x5682, 0x4 },
		{0x5683, 0x96},
		{0x5684, 0x0 },
		{0x5685, 0x0 },
		{0x5686, 0x3 },
		{0x5687, 0xc0},
};

const struct reg_val OV5642_QCIF_PREVIEW[] = {
		//set-up sensor crop
		{0x3800, 0x1 }, //HREF Horizontal start point [11:8]
		{0x3801, 0x50}, //HREF Horizontal start point [7:0] => 336
		{0x3802, 0x0 }, //HREF Vertical start point [11:8]
		{0x3803, 0x8 }, //HREF Vertical start point [7:0] => 8
		{0x3804, 0x4 }, //HREF Horizontal Width [11:8]
		{0x3805, 0x96}, //HREF Horizontal Width [7:0] => 1174
		{0x3806, 0x3 }, //HREF Horizontal Height [11:8]
		{0x3807, 0xc0}, //HREF Horizontal Height [7:0] => 960
		//output res
		{0x3808, 0x0 }, //DVP output horizontal size [11:8]
		{0x3809, 0xb0}, //DVP output horizontal size [7:0] => 176
		{0x380a, 0x0 }, //DVP output vertical size [11:8]
		{0x380b, 0x90}, //DVP output vertical size [7:0] => 144
		//total sizes???
		{0x380c, 0xc }, //Total Horizontal size [11:8]
		{0x380d, 0x80}, //Total Horizontal size [7:0] => 3200
		{0x380e, 0x3 }, //Total Vertical size [11:8]
		{0x380f, 0xe8}, //Total Vertical size [7:0] => 1000
		//enable scaling, awb, color adj
		{0x5001, 0x7f}, //UV adjust, Scale vertical, scale horizontal
					    //Line stretch, UV average, Color matrix, AWB enabling
		//set avg windows???
		{0x5680, 0x0 }, //Horizontal start position for average window [11:8]
		{0x5681, 0x0 }, //Horizontal start position for average window [7:0] => 0
		{0x5682, 0x4 }, //Horizontal end position for average window [11:8]
		{0x5683, 0x96}, //Horizontal end position for average window [7:0]  => 1174
		{0x5684, 0x0 }, //Vertical start position for average window [11:8]
		{0x5685, 0x0 }, //Vertical start position for average window [7:0] => 0
		{0x5686, 0x3 }, //Vertical end position for average window [11:8]
		{0x5687, 0xc0}, //Vertical end position for average window [7:0] => 960
};

const struct reg_val test[] = {
		//binning
//		{0x3818, 0xc0},
//		{0x370d, 0x40},
//		{0x3621, 0x80},

//		{0x3503, 0x03},
//
//		{0x350c, 0x01},
//		{0x350d, 0xfa},
//		{0x3501, 0x1f},
//		{0x3502, 0xa0},

//		{0x3a00, 0x48},

//		{0x3a03, 0x00},
//		{0x3a04, 0x00},


//		{0x3103, 0x93},
//		{0x3008, 0x82},
//		{0x3017, 0x7f},
//		{0x3018, 0xfc},
//		{0x3810, 0xc2},
//		//4x qvga
//		{0x3804, 0x05},
//		{0x3805, 0x00},
//		{0x3806, 0x03},
//		{0x3807, 0xc0},
//		//qvga
		{0x5001, 0xff},
		{0x3808, 0x01},
		{0x3809, 0x40},
		{0x380a, 0x00},
		{0x380b, 0xf0},
//		{0x3815, 0x04},
//
////		//26fps
//		{0x380c, 0x07},
//		{0x380d, 0x68},
//		{0x380e, 0x03},
//		{0x380f, 0xd8},
//
//		//pclk
  		{0x300f, 0x06},
		{0x3010, 0x10},
		{0x3011, 0x11},
		{0x3012, 0x02},
		{0x3815, 0x02},
		{0x3029, 0x00},
		{0x3033, 0x03},
		{0x460c, 0x22},

		//remove banding
//		{0x3011, 0x08},
//		{0x3012, 0x00},
//		{0x3010, 0x10},
//		{0x460c, 0x22},
//		{0x380c, 0x0c},
//		{0x380d, 0x80},
//		{0x3a00, 0x7c},
//		{0x3a08, 0x09},
//		{0x3a09, 0x60},
//		{0x3a0a, 0x07},
//		{0x3a0b, 0xd0},
//		{0x3a0d, 0x08},
//		{0x3a0e, 0x06},
//		{0x3623, 0x01},
//		{0x3630, 0x24},
//		{0x3633, 0x00},
//		{0x3c00, 0x00},
//		{0x3c01, 0x34},
//		{0x3c04, 0x28},
//		{0x3c05, 0x98},
//		{0x3c06, 0x00},
//		{0x3c07, 0x07},
//		{0x3c08, 0x01},
//		{0x3c09, 0xc2},
//		{0x300d, 0x02},
//		{0x3104, 0x01},
//		{0x3c0a, 0x4e},
//		{0x3c0b, 0x1f},
		//simple auto white balance
//		{0x3406, 0x00},
//		{0x5183, 0x80},
//		{0x5191, 0xff},
//		{0x5192, 0x00},
		//saturation -4
//		{0x5001, 0xff},
//		{0x5583, 0x00}, //val
//		{0x5584, 0x00}, //val
//		{0x5580, 0x02},
		//brightness -1
//		{0x5001, 0xff},
//		{0x5589, 0x10}, //val
//		{0x5580, 0x04},
//		{0x558a, 0x08},
		//contrast +4
		{0x5001, 0xff},
		{0x5580, 0x04},
		{0x5587, 0x30}, //val
		{0x5588, 0x30}, //val
		{0x558a, 0x00},
		//autosharpnes +1
		{0x530A, 0x00},
		{0x530c, 0x4 },
		{0x530d, 0x18},
		{0x5312, 0x20},
		//black and white from cam
		{0x5001, 0xff},
		{0x5580, 0x18},
		{0x5585, 0x80},
		{0x5586, 0x80},
		//exposure -0.7
		{0x3a0f, 0x28},
		{0x3a10, 0x20},
		{0x3a11, 0x51},
		{0x3a1b, 0x28},
		{0x3a1e, 0x20},
		{0x3a1f, 0x10},
		//exposure -1.0
//		{0x3a0f, 0x20},
//		{0x3a10, 0x18},
//		{0x3a11, 0x41},
//		{0x3a1b, 0x20},
//		{0x3a1e, 0x18},
//		{0x3a1f, 0x10},

		//color bar
//		{0x503d , 0x80},
//		{0x503e, 0x00},
		//color squares
//		{0x503d, 0x85},
//		{0x503e, 0x12},
		//b&w squares
//		{0x503d, 0x85},
//		{0x503e, 0x1a},
};
const struct reg_val OV5642_SET_PCLK_2X[] = {
		{0x300f, 0x06},
		{0x3010, 0x10},
		{0x3011, 0x11},
		{0x3012, 0x02},
		{0x3815, 0x02},
		{0x3029, 0x00},
		{0x3033, 0x03},
		{0x460c, 0x22},
};





const struct reg_val OV5642_QVGA_30FPS[] = {
	{0x3103, 0x93},
	{0x3008, 0x82},
	{0x3017, 0x7f},
	{0x3018, 0xfc},
	{0x3615, 0xf0},
	{0x3000, 0x00},
	{0x3001, 0x00},
	{0x3002, 0x5c},
	{0x3003, 0x00},
	{0x3004, 0xff},
	{0x3005, 0xff},
	{0x3006, 0x43},
	{0x3007, 0x37},
	{0x3011, 0x09},
	{0x3012, 0x02},
	{0x3010, 0x00},
	{0x460c, 0x20},
	{0x3815, 0x04},
	{0x370c, 0xa0},
	{0x3602, 0xfc},
	{0x3612, 0xff},
	{0x3634, 0xc0},
	{0x3613, 0x00},
	{0x3605, 0x7c},
	{0x3621, 0x09}, //default 0x09
	{0x3622, 0x60},
	{0x3604, 0x40},
	{0x3603, 0xa7},
	{0x3603, 0x27},
	{0x4000, 0x21},
	{0x401d, 0x22},
	{0x3600, 0x54},
	{0x3605, 0x04},
	{0x3606, 0x3f},
	{0x3c01, 0x80},
	{0x5000, 0x4f},
	{0x5020, 0x04},
	{0x5181, 0x79},
	{0x5182, 0x00},
	{0x5185, 0x22},
	{0x5197, 0x01},
	{0x5001, 0xff},
	{0x5500, 0x0a},
	{0x5504, 0x00},
	{0x5505, 0x7f},
	{0x5080, 0x08},
	{0x300e, 0x18},
	{0x4610, 0x00},
	{0x471d, 0x05},
	{0x4708, 0x06},
//////////////////////////////
	{0x3808, 0x02}, //640
	{0x3809, 0x80},
	{0x380a, 0x01}, //480
	{0x380b, 0xe0},
	{0x380e, 0x07}, //2000 -> total vert
	{0x380f, 0xd0},
//////////////////////////////
	{0x501f, 0x00},
	{0x5000, 0x4f},
	{0x4300, 0x30}, // 0x30 YUYV (YUV422),
	{0x3503, 0x07},
	{0x3501, 0x73},
	{0x3502, 0x80},
	{0x350b, 0x00},
	{0x3503, 0x07},
	{0x3824, 0x11},
	{0x3825, 0xb0},
	{0x3501, 0x1e},
	{0x3502, 0x80},
	{0x350b, 0x7f},
//////////////////////////////
	{0x380c, 0x07},//1834 -> sensor scan horiz
	{0x380d, 0x2a},
	{0x380e, 0x03},//1000 -> sensor scan vert
	{0x380f, 0xe8},
/////////////////////////////
	{0x3a0d, 0x04},
	{0x3a0e, 0x03},
	{0x3818, 0xe1}, //default 0xc1 --- 0xe0 ->
	// [6] mirror, [5] vertical flip, [1] 1/4 vert subsample, [0] 1/2 vert subsample
	{0x3705, 0xdb},
	{0x370a, 0x81},
/////////////////////////////
//	{0x3801, 0x00},
/////////////////////////////
	{0x3621, 0xc7},
/////////////////////////////
	{0x3800, 0x0}, //start at x = 80
	{0x3801, 0x50},
	{0x3802, 0x0}, // y = 8
	{0x3803, 0x08},
/////////////////////////////
	{0x3827, 0x08},
/////////////////////////////
	{0x3804, 0x05}, // 1280 = 320*4
	{0x3805, 0x00},
	{0x3806, 0x03}, //  960 = 240*4
	{0x3807, 0xc0},
	{0x3810, 0xff},// horizontal/vertical offsets

////////////////////////////
	{0x5682, 0x05},
	{0x5683, 0x00},
////////////////////////////

////////////////////////////
	{0x5686, 0x03},
	{0x5687, 0xbc},
	{0x3a00, 0x78}, // AEC: [5] banding
	{0x3a1a, 0x05},
	{0x3a13, 0x30},
	{0x3a18, 0x00},
	{0x3a19, 0x7c},
	{0x3a08, 0x12},
	{0x3a09, 0xc0},
	{0x3a0a, 0x0f},
	{0x3a0b, 0xa0},
	{0x350c, 0x07},
	{0x350d, 0xd0},
	{0x3500, 0x00},
	{0x3501, 0x00},
	{0x3502, 0x00},
	{0x350a, 0x00},
	{0x350b, 0x00},
	{0x3503, 0x00},
	{0x528a, 0x02},
	{0x528b, 0x04},
	{0x528c, 0x08},
	{0x528d, 0x08},
	{0x528e, 0x08},
	{0x528f, 0x10},
	{0x5290, 0x10},
	{0x5292, 0x00},
	{0x5293, 0x02},
	{0x5294, 0x00},
	{0x5295, 0x02},
	{0x5296, 0x00},
	{0x5297, 0x02},
	{0x5298, 0x00},
	{0x5299, 0x02},
	{0x529a, 0x00},
	{0x529b, 0x02},
	{0x529c, 0x00},
	{0x529d, 0x02},
	{0x529e, 0x00},
	{0x529f, 0x02},
	{0x3a0f, 0x3c},
	{0x3a10, 0x30},
	{0x3a1b, 0x3c},
	{0x3a1e, 0x30},
	{0x3a11, 0x70},
	{0x3a1f, 0x10},
	{0x3030, 0x2b},
	{0x3a02, 0x00},
	{0x3a03, 0x7d},
	{0x3a04, 0x00},
	{0x3a14, 0x00},
	{0x3a15, 0x7d},
	{0x3a16, 0x00},
	{0x3a00, 0x78}, //AEC: [5] banding
	{0x3a08, 0x12},
	{0x3a09, 0xc0},
	{0x3a0a, 0x0f},
	{0x3a0b, 0xa0},
	{0x3a0d, 0x04},
	{0x3a0e, 0x03},
	{0x5193, 0x70},
	{0x589b, 0x04},
	{0x589a, 0xc5},
	{0x401e, 0x20},
	{0x4001, 0x42},
	{0x401c, 0x04},
	{0x528a, 0x01},
	{0x528b, 0x04},
	{0x528c, 0x08},
	{0x528d, 0x10},
	{0x528e, 0x20},
	{0x528f, 0x28},
	{0x5290, 0x30},
	{0x5292, 0x00},
	{0x5293, 0x01},
	{0x5294, 0x00},
	{0x5295, 0x04},
	{0x5296, 0x00},
	{0x5297, 0x08},
	{0x5298, 0x00},
	{0x5299, 0x10},
	{0x529a, 0x00},
	{0x529b, 0x20},
	{0x529c, 0x00},
	{0x529d, 0x28},
	{0x529e, 0x00},
	{0x529f, 0x30},
	{0x5282, 0x00},
	{0x5300, 0x00},
	{0x5301, 0x20},
	{0x5302, 0x00},
	{0x5303, 0x7c},
	{0x530c, 0x00},
	{0x530d, 0x0c},
	{0x530e, 0x20},
	{0x530f, 0x80},
	{0x5310, 0x20},
	{0x5311, 0x80},
	{0x5308, 0x20},
	{0x5309, 0x40},
	{0x5304, 0x00},
	{0x5305, 0x30},
	{0x5306, 0x00},
	{0x5307, 0x80},
	{0x5314, 0x08},
	{0x5315, 0x20},
	{0x5319, 0x30},
	{0x5316, 0x10},
	{0x5317, 0x00},
	{0x5318, 0x02},
	{0x5380, 0x01},
	{0x5381, 0x00},
	{0x5382, 0x00},
	{0x5383, 0x4e},
	{0x5384, 0x00},
	{0x5385, 0x0f},
	{0x5386, 0x00},
	{0x5387, 0x00},
	{0x5388, 0x01},
	{0x5389, 0x15},
	{0x538a, 0x00},
	{0x538b, 0x31},
	{0x538c, 0x00},
	{0x538d, 0x00},
	{0x538e, 0x00},
	{0x538f, 0x0f},
	{0x5390, 0x00},
	{0x5391, 0xab},
	{0x5392, 0x00},
	{0x5393, 0xa2},
	{0x5394, 0x08},
	{0x5480, 0x14},
	{0x5481, 0x21},
	{0x5482, 0x36},
	{0x5483, 0x57},
	{0x5484, 0x65},
	{0x5485, 0x71},
	{0x5486, 0x7d},
	{0x5487, 0x87},
	{0x5488, 0x91},
	{0x5489, 0x9a},
	{0x548a, 0xaa},
	{0x548b, 0xb8},
	{0x548c, 0xcd},
	{0x548d, 0xdd},
	{0x548e, 0xea},
	{0x548f, 0x1d},
	{0x5490, 0x05},
	{0x5491, 0x00},
	{0x5492, 0x04},
	{0x5493, 0x20},
	{0x5494, 0x03},
	{0x5495, 0x60},
	{0x5496, 0x02},
	{0x5497, 0xb8},
	{0x5498, 0x02},
	{0x5499, 0x86},
	{0x549a, 0x02},
	{0x549b, 0x5b},
	{0x549c, 0x02},
	{0x549d, 0x3b},
	{0x549e, 0x02},
	{0x549f, 0x1c},
	{0x54a0, 0x02},
	{0x54a1, 0x04},
	{0x54a2, 0x01},
	{0x54a3, 0xed},
	{0x54a4, 0x01},
	{0x54a5, 0xc5},
	{0x54a6, 0x01},
	{0x54a7, 0xa5},
	{0x54a8, 0x01},
	{0x54a9, 0x6c},
	{0x54aa, 0x01},
	{0x54ab, 0x41},
	{0x54ac, 0x01},
	{0x54ad, 0x20},
	{0x54ae, 0x00},
	{0x54af, 0x16},
	{0x54b0, 0x01},
	{0x54b1, 0x20},
	{0x54b2, 0x00},
	{0x54b3, 0x10},
	{0x54b4, 0x00},
	{0x54b5, 0xf0},
	{0x54b6, 0x00},
	{0x54b7, 0xdf},
	{0x5402, 0x3f},
	{0x5403, 0x00},
	{0x3406, 0x00},
	{0x5180, 0xff},
	{0x5181, 0x52},
	{0x5182, 0x11},
	{0x5183, 0x14},
	{0x5184, 0x25},
	{0x5185, 0x24},
	{0x5186, 0x06},
	{0x5187, 0x08},
	{0x5188, 0x08},
	{0x5189, 0x7c},
	{0x518a, 0x60},
	{0x518b, 0xb2},
	{0x518c, 0xb2},
	{0x518d, 0x44},
	{0x518e, 0x3d},
	{0x518f, 0x58},
	{0x5190, 0x46},
	{0x5191, 0xf8},
	{0x5192, 0x04},
	{0x5193, 0x70},
	{0x5194, 0xf0},
	{0x5195, 0xf0},
	{0x5196, 0x03},
	{0x5197, 0x01},
	{0x5198, 0x04},
	{0x5199, 0x12},
	{0x519a, 0x04},
	{0x519b, 0x00},
	{0x519c, 0x06},
	{0x519d, 0x82},
	{0x519e, 0x00},
	{0x5025, 0x80},
	{0x3a0f, 0x38},
	{0x3a10, 0x30},
	{0x3a1b, 0x3a},
	{0x3a1e, 0x2e},
	{0x3a11, 0x60},
	{0x3a1f, 0x10},
	{0x5688, 0xa6},
	{0x5689, 0x6a},
	{0x568a, 0xea},
	{0x568b, 0xae},
	{0x568c, 0xa6},
	{0x568d, 0x6a},
	{0x568e, 0x62},
	{0x568f, 0x26},
	{0x5583, 0x40},
	{0x5584, 0x40},
	{0x5580, 0x02},
	{0x5000, 0xcf},
	{0x5800, 0x27},
	{0x5801, 0x19},
	{0x5802, 0x12},
	{0x5803, 0x0f},
	{0x5804, 0x10},
	{0x5805, 0x15},
	{0x5806, 0x1e},
	{0x5807, 0x2f},
	{0x5808, 0x15},
	{0x5809, 0x0d},
	{0x580a, 0x0a},
	{0x580b, 0x09},
	{0x580c, 0x0a},
	{0x580d, 0x0c},
	{0x580e, 0x12},
	{0x580f, 0x19},
	{0x5810, 0x0b},
	{0x5811, 0x07},
	{0x5812, 0x04},
	{0x5813, 0x03},
	{0x5814, 0x03},
	{0x5815, 0x06},
	{0x5816, 0x0a},
	{0x5817, 0x0f},
	{0x5818, 0x0a},
	{0x5819, 0x05},
	{0x581a, 0x01},
	{0x581b, 0x00},
	{0x581c, 0x00},
	{0x581d, 0x03},
	{0x581e, 0x08},
	{0x581f, 0x0c},
	{0x5820, 0x0a},
	{0x5821, 0x05},
	{0x5822, 0x01},
	{0x5823, 0x00},
	{0x5824, 0x00},
	{0x5825, 0x03},
	{0x5826, 0x08},
	{0x5827, 0x0c},
	{0x5828, 0x0e},
	{0x5829, 0x08},
	{0x582a, 0x06},
	{0x582b, 0x04},
	{0x582c, 0x05},
	{0x582d, 0x07},
	{0x582e, 0x0b},
	{0x582f, 0x12},
	{0x5830, 0x18},
	{0x5831, 0x10},
	{0x5832, 0x0c},
	{0x5833, 0x0a},
	{0x5834, 0x0b},
	{0x5835, 0x0e},
	{0x5836, 0x15},
	{0x5837, 0x19},
	{0x5838, 0x32},
	{0x5839, 0x1f},
	{0x583a, 0x18},
	{0x583b, 0x16},
	{0x583c, 0x17},
	{0x583d, 0x1e},
	{0x583e, 0x26},
	{0x583f, 0x53},
	{0x5840, 0x10},
	{0x5841, 0x0f},
	{0x5842, 0x0d},
	{0x5843, 0x0c},
	{0x5844, 0x0e},
	{0x5845, 0x09},
	{0x5846, 0x11},
	{0x5847, 0x10},
	{0x5848, 0x10},
	{0x5849, 0x10},
	{0x584a, 0x10},
	{0x584b, 0x0e},
	{0x584c, 0x10},
	{0x584d, 0x10},
	{0x584e, 0x11},
	{0x584f, 0x10},
	{0x5850, 0x0f},
	{0x5851, 0x0c},
	{0x5852, 0x0f},
	{0x5853, 0x10},
	{0x5854, 0x10},
	{0x5855, 0x0f},
	{0x5856, 0x0e},
	{0x5857, 0x0b},
	{0x5858, 0x10},
	{0x5859, 0x0d},
	{0x585a, 0x0d},
	{0x585b, 0x0c},
	{0x585c, 0x0c},
	{0x585d, 0x0c},
	{0x585e, 0x0b},
	{0x585f, 0x0c},
	{0x5860, 0x0c},
	{0x5861, 0x0c},
	{0x5862, 0x0d},
	{0x5863, 0x08},
	{0x5864, 0x11},
	{0x5865, 0x18},
	{0x5866, 0x18},
	{0x5867, 0x19},
	{0x5868, 0x17},
	{0x5869, 0x19},
	{0x586a, 0x16},
	{0x586b, 0x13},
	{0x586c, 0x13},
	{0x586d, 0x12},
	{0x586e, 0x13},
	{0x586f, 0x16},
	{0x5870, 0x14},
	{0x5871, 0x12},
	{0x5872, 0x10},
	{0x5873, 0x11},
	{0x5874, 0x11},
	{0x5875, 0x16},
	{0x5876, 0x14},
	{0x5877, 0x11},
	{0x5878, 0x10},
	{0x5879, 0x0f},
	{0x587a, 0x10},
	{0x587b, 0x14},
	{0x587c, 0x13},
	{0x587d, 0x12},
	{0x587e, 0x11},
	{0x587f, 0x11},
	{0x5880, 0x12},
	{0x5881, 0x15},
	{0x5882, 0x14},
	{0x5883, 0x15},
	{0x5884, 0x15},
	{0x5885, 0x15},
	{0x5886, 0x13},
	{0x5887, 0x17},
	{0x3710, 0x10},
	{0x3632, 0x51},
	{0x3702, 0x10},
	{0x3703, 0xb2},
	{0x3704, 0x18},
	{0x370b, 0x40},
	{0x370d, 0x03}, //default 0x03 | 0x43 enable vert bin
	{0x3631, 0x01},
	{0x3632, 0x52},
	{0x3606, 0x24},
	{0x3620, 0x96},
	{0x5785, 0x07},
	{0x3a13, 0x30},
	{0x3600, 0x52},
	{0x3604, 0x48},
	{0x3606, 0x1b},
	{0x370d, 0x0b}, // default 0x0b | 0x4b vert bin enable
	{0x370f, 0xc0},
	{0x3709, 0x01},
	{0x3823, 0x00},
	{0x5007, 0x00},
	{0x5009, 0x00},
	{0x5011, 0x00},
	{0x5013, 0x00},
	{0x519e, 0x00},
	{0x5086, 0x00},
	{0x5087, 0x00},
	{0x5088, 0x00},
	{0x5089, 0x00},
	{0x302b, 0x00},
	{0x3621, 0x87},// default 0x87 -> (8) horiz bin enable |
	////////////////////////////////////////////////////

//	{0x3800, 0x04}, //start at x = 1134
//	{0x3801, 0x6e},
//	{0x3802, 0x03}, //y = 851
//	{0x3803, 0x53},

//	{0x3804, 0x01}, //total image size 320
//	{0x3805, 0x40},
//	{0x3806, 0x00}, //by 240
//	{0x3807, 0xf0},

	{0x3808, 0x01}, //output image size 320
	{0x3809, 0x40},
	{0x380a, 0x00}, //by 240
	{0x380b, 0xf0},

//	{0x380c, 0x01}, //sensor scan size 324
//	{0x380d, 0x44},
//	{0x380e, 0x00}, //by 242
//	{0x380f, 0xf2},
};

#endif /* OV5642_REGISTERS_H_ */


//from lwn.net/Articles/6587779/









